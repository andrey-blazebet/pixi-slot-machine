{"version":3,"sources":["webpack:///./components/Button/assets/playbtn.png","webpack:///./components/Button/assets/playbtn_inactive.png","webpack:///./components/Button/index.ts","webpack:///./components/Reels/assets/reel_cells.png","webpack:///./components/Reels/index.ts","webpack:///./components/FPSDisplay/index.ts","webpack:///./index.ts"],"names":["Button","btnActiveTexture","from","btnInactiveTexture","isActive","onClick","btn","buttonMode","interactive","container","addChild","buttonInstance","getContainer","setActive","flag","texture","setOnclick","cb","on","load","loader","add","reelSpeedFactor","getNumberBetween","min","max","Math","floor","random","Reels","width","height","reelCellsTexture","reels","reelsCyclesLength","reelPositions","Array","length","_","index","i","reel","reelCellHeight","tilePosition","x","y","push","rotateReels","positions","undefined","find","requestAnimationFrame","alert","rotate","easyLevel","preDefinedPosition","reelCellNumber","position","getNewReelPositions","reelRotationCycles","ticker","FPSDisplayText","fontSize","fill","setInterval","fps","FPS","toFixed","text","Date","now","reelsPosition","buttonPosition","FPSDisplayPosition","main","app","setup","backgroundColor","document","body","appendChild","view","renderer","resize","window","innerWidth","innerHeight","stage","scale","addEventListener","onResize","reelsContainer","set","button","instance","btnContainer","fpsDisplayContainer","onload","shared","onComplete","once"],"mappings":"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","file":"app.5bcbe67cd93ea1f7bfe3.js","sourcesContent":["export default __webpack_public_path__ + \"assets/4b47a44dfec58e388f81716668f6b7f3.png\";","export default __webpack_public_path__ + \"assets/584548321fda602a2ac4f0965b5ab415.png\";","import * as PIXI from 'pixi.js';\nimport { ButtonFactoryInterface, ButtonInstanceInterface } from './contract';\n\nimport btnActiveImg from './assets/playbtn.png';\nimport btnInactiveImg from './assets/playbtn_inactive.png';\n\nconst Button: ButtonFactoryInterface = () => {\n  const btnActiveTexture = PIXI.Texture.from('btnActiveImg');\n  const btnInactiveTexture = PIXI.Texture.from('btnInactiveImg');\n  let isActive = true;\n  let onClick: Function = () => {};\n\n  const btn = new PIXI.Sprite(btnActiveTexture);\n  btn.buttonMode = true;\n  btn.interactive = true;\n\n  const container = new PIXI.Container();\n  container.addChild(btn);\n\n  const buttonInstance: ButtonInstanceInterface = {\n    getContainer(): PIXI.Container {\n      return container;\n    },\n\n    setActive(flag = true) {\n      isActive = flag;\n      btn.texture = isActive ? btnActiveTexture : btnInactiveTexture;\n    },\n\n    isActive() {\n      return isActive;\n    },\n\n    setOnclick(cb) {\n      onClick = cb;\n    }\n  };\n\n  btn.on('click', () => {\n    if (onClick) onClick(buttonInstance);\n  });\n\n  return buttonInstance;\n};\n\nButton.load = (loader) => {\n  loader.add('btnActiveImg', btnActiveImg);\n  loader.add('btnInactiveImg', btnInactiveImg);\n};\n\nexport default Button;\n","export default __webpack_public_path__ + \"assets/582cb73eb42daf0a295da68c5156de1d.png\";","import * as PIXI from 'pixi.js';\nimport { ReelsFactoryInterface } from './contract';\n\nimport reelCellsImg from './assets/reel_cells.png';\n\nconst reelsNumber = 5;\nconst reelCellWidth = 102;\nconst reelCellHeight = 100;\nconst reelWidth = reelCellWidth;\nconst reelHeight = reelCellHeight * 3 + 20;\nconst reelCellNumber = 7;\nconst reelSpeedFactor = [5, 10, 15, 20, 30];\nconst reelRotationCycles = 2;\n\nconst Reel = (width: number, height: number): PIXI.TilingSprite => {\n  const reelCellsTexture = PIXI.Texture.from('reelCellsImg');\n  return new PIXI.TilingSprite(reelCellsTexture, width, height);\n};\n\nconst getNumberBetween = (min: number, max: number): number => Math.floor(Math.random() * (max - min + 1)) + min;\n\nconst getNewReelPositions = (easyLevel = true): number[] => {\n  const positions = [];\n  let preDefinedPosition = null;\n  if (easyLevel) {\n    const chance = getNumberBetween(0, 10);\n    if (chance < 5) {\n      preDefinedPosition = getNumberBetween(0, reelCellNumber - 1);\n    }\n  }\n  for (let i = 0; i < reelsNumber; i += 1) {\n    const position = preDefinedPosition || getNumberBetween(0, reelCellNumber - 1);\n    positions.push(position);\n  }\n  return positions;\n};\n\nconst checkResults = (positions: number[]): void => {\n  const win = positions.find((i) => i !== positions[0]) === undefined;\n  if (win) alert('You won!');\n};\n\nconst Reels: ReelsFactoryInterface = () => {\n  const container: PIXI.Container = new PIXI.Container();\n  const reels: PIXI.TilingSprite[] = [];\n  const reelsCyclesLength: number[] = [];\n  let reelPositions: number[] = Array.from({ length: reelsNumber }, (_, index) => index);\n\n  for (let i = 0; i < reelsNumber; i = i + 1) {\n    const reel = Reel(reelWidth, reelHeight);\n    reel.tilePosition.x = 0;\n    reel.tilePosition.y = -reelPositions[i] * reelCellHeight + 10;\n    reel.x = i * (reelWidth + 10);\n    reel.y = 0;\n    reels.push(reel);\n    container.addChild(reel);\n  }\n\n  function rotateReels(cb: Function): void {\n    for (let i = 0; i < reelsNumber; i++) {\n      if (reelsCyclesLength[i] > 0) {\n        reels[i].tilePosition.y += reelSpeedFactor[i];\n        reelsCyclesLength[i] -= reelSpeedFactor[i];\n      } else if (reelsCyclesLength[i] < 0) {\n        reels[i].tilePosition.y += reelsCyclesLength[i];\n        reelsCyclesLength[i] = 0;\n      }\n    }\n    const done = reelsCyclesLength.find((i) => i > 0);\n    if (done !== undefined) requestAnimationFrame(() => rotateReels(cb));\n    else {\n      cb();\n      checkResults(reelPositions);\n    }\n  }\n\n  return {\n    getContainer() {\n      return container;\n    },\n\n    rotate(cb) {\n      reelPositions = getNewReelPositions();\n      for (let i = 0; i < reelsNumber; i += 1) {\n        reels[i].tilePosition.y = -reelPositions[i] * reelCellHeight + 10;\n        reelsCyclesLength[i] = reelRotationCycles * reelCellHeight * reelCellNumber;\n      }\n      rotateReels(cb);\n    }\n  };\n};\n\nReels.load = (loader) => {\n  loader.add('reelCellsImg', reelCellsImg);\n};\n\nexport default Reels;\n","import * as PIXI from 'pixi.js';\nimport { FPSDisplayType } from './contract';\n\nconst FPSDisplay: FPSDisplayType = (ticker) => {\n  const container = new PIXI.Container();\n  const FPSDisplayText = new PIXI.Text('', {\n    fontSize: 20,\n    fill: 0xff0000\n  });\n  container.addChild(FPSDisplayText);\n\n  setInterval(() => {\n    const fps = ticker.FPS.toFixed(2);\n    FPSDisplayText.text = `Timestamp: ${Date.now()}, FPS: ${fps}`;\n  }, 1000);\n\n  return container;\n};\n\nexport default FPSDisplay;\n","/**\n * Just for simplicity and demonstration purposes, no specific JavaScript framework or state management library has\n * been used.\n */\n\nimport * as PIXI from 'pixi.js';\n\nimport Button from './components/Button';\nimport Reels from './components/Reels';\nimport FPSDisplay from './components/FPSDisplay';\n\nimport './style.css';\n\nconst gameWidth = 800;\nconst gameHeight = 600;\nconst reelsPosition = { x: 120, y: 60 };\nconst buttonPosition = { x: 300, y: 440 };\nconst FPSDisplayPosition = { x: 220, y: 560 };\n\nexport default function main() {\n  let app: PIXI.Application;\n\n  function loadAssets(): void {\n    const loader = PIXI.Loader.shared;\n    Button.load(loader);\n    Reels.load(loader);\n    loader.onComplete.once(setup);\n    loader.load();\n  }\n\n  function setup(): void {\n    createRenderer();\n    const stage = app.stage;\n\n    const { rotate, getContainer } = Reels();\n    const reelsContainer = getContainer();\n    reelsContainer.position.set(reelsPosition.x, reelsPosition.y);\n    stage.addChild(reelsContainer);\n\n    const button = Button();\n    button.setOnclick((instance) => {\n      if (instance.isActive()) {\n        instance.setActive(false);\n        rotate(() => {\n          instance.setActive(true);\n        });\n      }\n    });\n    const btnContainer = button.getContainer();\n    btnContainer.position.set(buttonPosition.x, buttonPosition.y);\n    stage.addChild(btnContainer);\n\n    const fpsDisplayContainer = FPSDisplay(app.ticker);\n    fpsDisplayContainer.position.set(FPSDisplayPosition.x, FPSDisplayPosition.y);\n    stage.addChild(fpsDisplayContainer);\n  }\n\n  function createRenderer(): void {\n    app = new PIXI.Application({\n      backgroundColor: 0xd3d3d3,\n      width: gameWidth,\n      height: gameHeight\n    });\n\n    document.body.appendChild(app.view);\n\n    app.renderer.resize(window.innerWidth, window.innerHeight);\n    app.stage.scale.x = window.innerWidth / gameWidth;\n    app.stage.scale.y = window.innerHeight / gameHeight;\n\n    window.addEventListener('resize', onResize);\n  }\n\n  function onResize(): void {\n    if (!app) {\n      return;\n    }\n    app.renderer.resize(window.innerWidth, window.innerHeight);\n    app.stage.scale.x = window.innerWidth / gameWidth;\n    app.stage.scale.y = window.innerHeight / gameHeight;\n  }\n\n  window.onload = (): void => {\n    loadAssets();\n  };\n}\n\nmain();\n"],"sourceRoot":""}