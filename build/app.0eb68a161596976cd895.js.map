{"version":3,"sources":["webpack:///./Reels.ts","webpack:///./assets/playbtn.png","webpack:///./assets/playbtn_inactive.png","webpack:///./assets/reel_cells.png","webpack:///./index.ts","webpack:///./Button.ts","webpack:///./FPSCounter.ts"],"names":["reelSpeedFactor","getNumberBetween","min","max","Math","floor","random","Reels","width","height","texture","container","reels","reelsCyclesLength","reelPositions","Array","from","length","_","index","i","reel","reelCellHeight","tilePosition","x","y","push","addChild","rotateReels","cb","positions","undefined","find","requestAnimationFrame","alert","getContainer","rotate","easyLevel","preDefinedPosition","reelCellNumber","position","getNewReelPositions","reelRotationCycles","reelsPosition","buttonPosition","fpsPanelPosition","main","app","setup","backgroundColor","document","body","appendChild","view","renderer","resize","window","innerWidth","innerHeight","stage","scale","addEventListener","onResize","reelsContainer","set","btnContainer","onClickActive","activeBTN","inactiveBTN","isActive","button","buttonMode","interactive","on","Button","ticker","fpsPanel","fpsContainer","fontSize","fill","setInterval","fps","FPS","toFixed","text","Date","now","onload","loader","shared","add","onComplete","once","load"],"mappings":"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","file":"app.0eb68a161596976cd895.js","sourcesContent":["import * as PIXI from 'pixi.js';\n\nconst reelsNumber = 5;\nconst reelCellWidth = 102;\nconst reelCellHeight = 100;\nconst reelWidth = reelCellWidth;\nconst reelHeight = reelCellHeight * 3 + 20;\nconst reelCellNumber = 7;\nconst reelSpeedFactor = [5, 10, 15, 20, 30];\nconst reelRotationCycles = 2;\n\nfunction Reel(width: number, height: number): PIXI.TilingSprite {\n  const texture = PIXI.Texture.from('reel_cells');\n  return new PIXI.TilingSprite(texture, width, height);\n}\n\nfunction getNumberBetween(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getNewReelPositions(easyLevel = true): number[] {\n  const positions = [];\n  let preDefinedPosition = null;\n  if (easyLevel) {\n    const chance = getNumberBetween(0, 10);\n    if (chance < 5) {\n      preDefinedPosition = getNumberBetween(0, reelCellNumber - 1);\n    }\n  }\n  for (let i = 0; i < reelsNumber; i += 1) {\n    const position = preDefinedPosition || getNumberBetween(0, reelCellNumber - 1);\n    positions.push(position);\n  }\n  return positions;\n}\n\nfunction checkResults(positions: number[]): void {\n  const win = positions.find((i) => i !== positions[0]) === undefined;\n  if (win) alert('You won!');\n}\n\nexport default function Reels(): { getContainer(): PIXI.Container; rotate(cb: Function): void } {\n  const container: PIXI.Container = new PIXI.Container();\n  const reels: PIXI.TilingSprite[] = [];\n  const reelsCyclesLength: number[] = [];\n  let reelPositions: number[] = Array.from({ length: reelsNumber }, (_, index) => index);\n\n  for (let i = 0; i < reelsNumber; i = i + 1) {\n    const reel = Reel(reelWidth, reelHeight);\n    reel.tilePosition.x = 0;\n    reel.tilePosition.y = -reelPositions[i] * reelCellHeight + 10;\n    reel.x = i * (reelWidth + 10);\n    reel.y = 0;\n    reels.push(reel);\n    container.addChild(reel);\n  }\n\n  function rotateReels(cb: Function): void {\n    for (let i = 0; i < reelsNumber; i++) {\n      if (reelsCyclesLength[i] > 0) {\n        reels[i].tilePosition.y += reelSpeedFactor[i];\n        reelsCyclesLength[i] -= reelSpeedFactor[i];\n      } else if (reelsCyclesLength[i] < 0) {\n        reels[i].tilePosition.y += reelsCyclesLength[i];\n        reelsCyclesLength[i] = 0;\n      }\n    }\n    const done = reelsCyclesLength.find((i) => i > 0);\n    if (done !== undefined) requestAnimationFrame(() => rotateReels(cb));\n    else {\n      cb();\n      checkResults(reelPositions);\n    }\n  }\n\n  return {\n    getContainer() {\n      return container;\n    },\n\n    rotate(cb: Function) {\n      reelPositions = getNewReelPositions();\n      for (let i = 0; i < reelsNumber; i += 1) {\n        reels[i].tilePosition.y = -reelPositions[i] * reelCellHeight + 10;\n        reelsCyclesLength[i] = reelRotationCycles * reelCellHeight * reelCellNumber;\n      }\n      rotateReels(cb);\n    }\n  };\n}\n","export default __webpack_public_path__ + \"assets/4b47a44dfec58e388f81716668f6b7f3.png\";","export default __webpack_public_path__ + \"assets/584548321fda602a2ac4f0965b5ab415.png\";","export default __webpack_public_path__ + \"assets/582cb73eb42daf0a295da68c5156de1d.png\";","/**\n * Just for simplicity and demonstration purposes, no specific JavaScript framework or state management library has\n * been used.\n */\n\nimport * as PIXI from 'pixi.js';\n\nimport Reels from './Reels';\nimport Button from './Button';\nimport FPSCounter from './FPSCounter';\n\nimport './style.css';\nimport btnPlayAsset from './assets/playbtn.png';\nimport btnPlayInactiveAsset from './assets/playbtn_inactive.png';\nimport reelCellsAsset from './assets/reel_cells.png';\n\nconst gameWidth = 800;\nconst gameHeight = 600;\nconst reelsPosition = { x: 120, y: 60 };\nconst buttonPosition = { x: 300, y: 440 };\nconst fpsPanelPosition = { x: 220, y: 560 };\n\nexport default function main() {\n  let app: PIXI.Application;\n\n  function loadAssets(): void {\n    const loader = PIXI.Loader.shared;\n    loader.add('playbtn', btnPlayAsset);\n    loader.add('playbtn_inactive', btnPlayInactiveAsset);\n    loader.add('reel_cells', reelCellsAsset);\n    loader.onComplete.once(setup);\n    loader.load();\n  }\n\n  function setup(): void {\n    createRenderer();\n    const stage = app.stage;\n\n    const { rotate, getContainer } = Reels();\n    const reelsContainer = getContainer();\n    reelsContainer.position.set(reelsPosition.x, reelsPosition.y);\n    stage.addChild(reelsContainer);\n\n    const btnContainer = Button((cb: Function) => rotate(cb));\n    btnContainer.position.set(buttonPosition.x, buttonPosition.y);\n    stage.addChild(btnContainer);\n\n    const fpsContainer = FPSCounter(app.ticker);\n    fpsContainer.position.set(fpsPanelPosition.x, fpsPanelPosition.y);\n    stage.addChild(fpsContainer);\n  }\n\n  function createRenderer(): void {\n    app = new PIXI.Application({\n      backgroundColor: 0xd3d3d3,\n      width: gameWidth,\n      height: gameHeight\n    });\n\n    document.body.appendChild(app.view);\n\n    app.renderer.resize(window.innerWidth, window.innerHeight);\n    app.stage.scale.x = window.innerWidth / gameWidth;\n    app.stage.scale.y = window.innerHeight / gameHeight;\n\n    window.addEventListener('resize', onResize);\n  }\n\n  function onResize(): void {\n    if (!app) {\n      return;\n    }\n    app.renderer.resize(window.innerWidth, window.innerHeight);\n    app.stage.scale.x = window.innerWidth / gameWidth;\n    app.stage.scale.y = window.innerHeight / gameHeight;\n  }\n\n  window.onload = (): void => {\n    loadAssets();\n  };\n}\n\nmain();\n","import * as PIXI from 'pixi.js';\n\nexport default function Button(onClickActive: Function): PIXI.Container {\n  const activeBTN = PIXI.Texture.from('playbtn');\n  const inactiveBTN = PIXI.Texture.from('playbtn_inactive');\n  let isActive = true;\n\n  const button = new PIXI.Sprite(activeBTN);\n  button.buttonMode = true;\n  button.interactive = true;\n\n  button.on('click', () => {\n    if (isActive) {\n      isActive = false;\n      button.texture = inactiveBTN;\n      onClickActive(() => {\n        isActive = true;\n        button.texture = activeBTN;\n      });\n    }\n  });\n\n  const container = new PIXI.Container();\n  container.addChild(button);\n\n  return container;\n}\n","import * as PIXI from 'pixi.js';\n\nexport default function FPSCounter(ticker: PIXI.Ticker): PIXI.Container {\n  const container = new PIXI.Container();\n  const fpsPanel = new PIXI.Text('', {\n    fontSize: 20,\n    fill: 0xff0000\n  });\n  container.addChild(fpsPanel);\n\n  setInterval(() => {\n    const fps = ticker.FPS.toFixed(2);\n    fpsPanel.text = `Timestamp: ${Date.now()}, FPS: ${fps}`;\n  }, 1000);\n\n  return container;\n}\n"],"sourceRoot":""}