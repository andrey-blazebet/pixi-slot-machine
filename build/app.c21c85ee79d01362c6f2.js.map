{"version":3,"sources":["webpack:///./config/index.ts","webpack:///./components/Button/assets/playbtn.png","webpack:///./components/Button/assets/playbtn_inactive.png","webpack:///./components/Button/index.ts","webpack:///./components/Reel/assets/reel_cells.png","webpack:///./components/Reel/index.ts","webpack:///./components/Reels/index.ts","webpack:///./components/FPSDisplay/index.ts","webpack:///./index.ts"],"names":["gameWidth","gameHeight","reelsPosition","x","y","buttonPosition","FPSDisplayPosition","totalReels","reelRotationCycles","reelRotationSpeedFactor","reelTotalCells","reelVisibleCells","reelCellHeight","reelCellWidth","reelVerticalPadding","reelHorizontalMargin","useEasyMode","config","position","set","btnActiveTexture","from","btnInactiveTexture","btn","buttonMode","interactive","addChild","setActive","active","this","texture","onClick","fn","on","load","loader","add","reelIndex","ticker","initialPosition","reelHeight","appTicker","reelPosition","cellHeight","horizontalMargin","rotationCycles","totalCells","verticalPadding","cyclesLength","selectCellNumber","setPosition","width","tilePosition","Math","ceil","getPosition","rotate","rotationSpeedFactor","cb","animation","remove","items","rotating","index","reel","push","reelPositions","getNewReelPositions","rotatingReels","onStop","checkResults","i","length","isRotating","positions","getNumberBetween","min","max","floor","random","preDefinedPosition","undefined","find","alert","textStyle","fontSize","fill","content","setInterval","fps","FPS","toFixed","text","Date","now","window","onload","onComplete","app","backgroundColor","height","renderer","resize","innerWidth","innerHeight","stage","scale","addEventListener","createApplication","button","reels","fpsDisplay","instance","document","body","appendChild","view","render","shared","once"],"mappings":"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","file":"app.c21c85ee79d01362c6f2.js","sourcesContent":["import { ConfigInterface } from './contract';\n\nexport const config: ConfigInterface = {\n  gameWidth: 800,\n  gameHeight: 600,\n  reelsPosition: { x: 120, y: 60 },\n  buttonPosition: { x: 300, y: 440 },\n  FPSDisplayPosition: { x: 220, y: 560 },\n  totalReels: 5,\n  reelRotationCycles: 2,\n  reelRotationSpeedFactor: [5, 10, 15, 20, 30],\n  reelTotalCells: 7,\n  reelVisibleCells: 3,\n  reelCellHeight: 100,\n  reelCellWidth: 102,\n  reelVerticalPadding: 25,\n  reelHorizontalMargin: 15,\n  useEasyMode: true\n};\n","export default __webpack_public_path__ + \"assets/4b47a44dfec58e388f81716668f6b7f3.png\";","export default __webpack_public_path__ + \"assets/584548321fda602a2ac4f0965b5ab415.png\";","import * as PIXI from 'pixi.js';\n\nimport btnActiveImg from './assets/playbtn.png';\nimport btnInactiveImg from './assets/playbtn_inactive.png';\nimport { ConfigInterface } from '../../config/contract';\n\nclass Button extends PIXI.Container {\n  protected btnActiveTexture: PIXI.Texture;\n  protected btnInactiveTexture: PIXI.Texture;\n  protected btn: PIXI.Sprite;\n\n  constructor(config: ConfigInterface) {\n    super();\n    this.position.set(config.buttonPosition.x, config.buttonPosition.y);\n    this.btnActiveTexture = PIXI.Texture.from('btnActiveImg');\n    this.btnInactiveTexture = PIXI.Texture.from('btnInactiveImg');\n    this.btn = new PIXI.Sprite(this.btnActiveTexture);\n    this.btn.buttonMode = true;\n    this.btn.interactive = true;\n    this.addChild(this.btn);\n  }\n\n  setActive(active: boolean) {\n    this.btn.texture = active ? this.btnActiveTexture : this.btnInactiveTexture;\n  }\n\n  onClick(fn: (instance: Button) => void) {\n    this.btn.on('click', () => fn(this));\n  }\n\n  static load(loader: PIXI.Loader) {\n    loader.add('btnActiveImg', btnActiveImg);\n    loader.add('btnInactiveImg', btnInactiveImg);\n  }\n}\n\nexport default Button;\n","export default __webpack_public_path__ + \"assets/582cb73eb42daf0a295da68c5156de1d.png\";","import * as PIXI from 'pixi.js';\nimport reelCellsImg from './assets/reel_cells.png';\nimport { ConfigInterface } from '../../config/contract';\n\nclass Reel extends PIXI.TilingSprite {\n  protected reelPosition: number;\n\n  protected cyclesLength: number;\n\n  protected reelIndex: number;\n\n  protected horizontalMargin: number;\n\n  protected verticalPadding: number;\n\n  protected rotationCycles: number;\n\n  protected cellHeight: number;\n\n  protected totalCells: number;\n\n  protected appTicker: PIXI.Ticker;\n\n  constructor(reelIndex: number, config: ConfigInterface, ticker: PIXI.Ticker, initialPosition: number = 0) {\n    const texture = PIXI.Texture.from('reelCellsImg');\n    const {\n      reelCellHeight,\n      reelVisibleCells,\n      reelVerticalPadding,\n      reelCellWidth,\n      reelHorizontalMargin,\n      reelRotationCycles,\n      reelTotalCells\n    } = config;\n    const reelHeight = reelCellHeight * reelVisibleCells + reelVerticalPadding;\n    super(texture, reelCellWidth, reelHeight);\n    this.appTicker = ticker;\n    this.reelPosition = 0;\n    this.cellHeight = reelCellHeight;\n    this.horizontalMargin = reelHorizontalMargin;\n    this.rotationCycles = reelRotationCycles;\n    this.totalCells = reelTotalCells;\n    this.verticalPadding = reelVerticalPadding;\n    this.reelIndex = reelIndex;\n    this.cyclesLength = 0;\n    this.selectCellNumber(initialPosition);\n    this.setPosition();\n  }\n\n  protected setPosition() {\n    this.x = this.reelIndex * (this.width + this.horizontalMargin);\n    this.y = 0;\n  }\n\n  protected selectCellNumber(position: number) {\n    this.reelPosition = position;\n    this.tilePosition.x = 0;\n    this.tilePosition.y = -position * this.cellHeight + Math.ceil(this.verticalPadding / 2);\n    this.cyclesLength = this.rotationCycles * this.cellHeight * this.totalCells;\n  }\n\n  getPosition() {\n    return this.reelPosition;\n  }\n\n  rotate(position: number, rotationSpeedFactor: number, cb: Function) {\n    this.selectCellNumber(position);\n    const animation = () => {\n      if (this.cyclesLength > 0) {\n        this.tilePosition.y += rotationSpeedFactor;\n        this.cyclesLength -= rotationSpeedFactor;\n      } else if (this.cyclesLength <= 0) {\n        if (this.cyclesLength < 0) {\n          this.tilePosition.y += this.cyclesLength;\n          this.cyclesLength = 0;\n        }\n        this.appTicker.remove(animation);\n        cb();\n      }\n    };\n    this.appTicker.add(animation);\n  }\n\n  static load(loader: PIXI.Loader) {\n    loader.add('reelCellsImg', reelCellsImg);\n  }\n}\n\nexport default Reel;\n","import * as PIXI from 'pixi.js';\nimport Reel from '../Reel';\nimport { ConfigInterface } from '../../config/contract';\n\nclass Reels extends PIXI.Container {\n  protected items: Reel[] = [];\n\n  protected totalReels: number;\n\n  protected rotationSpeedFactor: number[];\n\n  protected useEasyMode: boolean;\n\n  protected rotating = false;\n\n  protected reelTotalCells: number;\n\n  constructor(config: ConfigInterface, ticker: PIXI.Ticker) {\n    super();\n    this.totalReels = config.totalReels;\n    this.useEasyMode = config.useEasyMode;\n    this.rotationSpeedFactor = config.reelRotationSpeedFactor;\n    this.reelTotalCells = config.reelTotalCells;\n    this.position.set(config.reelsPosition.x, config.reelsPosition.y);\n    for (let index = 0; index < this.totalReels; index = index + 1) {\n      const reel = new Reel(index, config, ticker);\n      this.items.push(reel);\n      this.addChild(reel);\n    }\n  }\n\n  rotate(cb: Function) {\n    this.rotating = true;\n    const reelPositions = this.getNewReelPositions();\n    let rotatingReels = this.totalReels;\n    const onStop = () => {\n      rotatingReels -= 1;\n      if (!rotatingReels) {\n        cb();\n        this.rotating = false;\n        this.checkResults();\n      }\n    };\n    for (let i = 0; i < this.items.length; i++) {\n      this.items[i].rotate(reelPositions[i], this.rotationSpeedFactor[i], onStop);\n    }\n  }\n\n  isRotating() {\n    return this.rotating;\n  }\n\n  protected getNewReelPositions(): number[] {\n    const positions = [];\n    const getNumberBetween = (min: number, max: number): number => Math.floor(Math.random() * (max - min + 1)) + min;\n    let preDefinedPosition = null;\n    if (this.useEasyMode) {\n      const chance = getNumberBetween(0, 10);\n      if (chance < 5) {\n        preDefinedPosition = getNumberBetween(0, this.reelTotalCells - 1);\n      }\n    }\n    for (let i = 0; i < this.totalReels; i += 1) {\n      const position = preDefinedPosition || getNumberBetween(0, this.reelTotalCells - 1);\n      positions.push(position);\n    }\n    return positions;\n  }\n\n  protected checkResults(): void {\n    const position = this.items[0].getPosition();\n    const win = this.items.find((i) => i.getPosition() !== position) === undefined;\n    if (win) alert('You won!');\n  }\n\n  static load(loader: PIXI.Loader) {\n    Reel.load(loader);\n  }\n}\n\nexport default Reels;\n","import * as PIXI from 'pixi.js';\nimport { ConfigInterface } from '../../config/contract';\n\nclass FPSDisplay extends PIXI.Container {\n  protected textStyle: Partial<PIXI.TextStyle> = {\n    fontSize: 20,\n    fill: 0xff0000\n  };\n\n  constructor(config: ConfigInterface, ticker: PIXI.Ticker) {\n    super();\n    this.position.set(config.FPSDisplayPosition.x, config.FPSDisplayPosition.y);\n    const content = new PIXI.Text('', this.textStyle);\n    this.addChild(content);\n\n    setInterval(() => {\n      const fps = ticker.FPS.toFixed(2);\n      content.text = `Timestamp: ${Date.now()}, FPS: ${fps}`;\n    }, 1000);\n  }\n}\n\nexport default FPSDisplay;\n","/**\n * Just for simplicity and demonstration purposes, no specific JavaScript framework or state management library has\n * been used.\n */\n\nimport * as PIXI from 'pixi.js';\nimport { config } from './config';\nimport Button from './components/Button';\nimport Reels from './components/Reels';\nimport FPSDisplay from './components/FPSDisplay';\n\nimport './style.css';\n\nconst { gameWidth, gameHeight } = config;\n\nfunction createApplication(): PIXI.Application {\n  const app = new PIXI.Application({\n    backgroundColor: 0xd3d3d3,\n    width: gameWidth,\n    height: gameHeight\n  });\n  app.renderer.resize(window.innerWidth, window.innerHeight);\n  app.stage.scale.x = window.innerWidth / gameWidth;\n  app.stage.scale.y = window.innerHeight / gameHeight;\n  window.addEventListener('resize', () => {\n    app.renderer.resize(window.innerWidth, window.innerHeight);\n    app.stage.scale.x = window.innerWidth / gameWidth;\n    app.stage.scale.y = window.innerHeight / gameHeight;\n  });\n  return app;\n}\n\nfunction loadAssets(onComplete: () => void): void {\n  const loader = PIXI.Loader.shared;\n  Button.load(loader);\n  Reels.load(loader);\n  loader.onComplete.once(onComplete);\n  loader.load();\n}\n\nfunction render(app: PIXI.Application) {\n  document.body.appendChild(app.view);\n}\n\nwindow.onload = () =>\n  loadAssets(() => {\n    const app = createApplication();\n    const stage = app.stage;\n\n    const button = new Button(config);\n    stage.addChild(button);\n\n    const reels = new Reels(config, app.ticker);\n    stage.addChild(reels);\n\n    const fpsDisplay = new FPSDisplay(config, app.ticker);\n    stage.addChild(fpsDisplay);\n\n    button.onClick((instance) => {\n      if (!reels.isRotating()) {\n        instance.setActive(false);\n        reels.rotate(() => {\n          instance.setActive(true);\n        });\n      }\n    });\n\n    render(app);\n  });\n"],"sourceRoot":""}